from _typeshed import Incomplete
from pyarrow.lib import Table as Table

class ORCFile:
    reader: Incomplete
    def __init__(self, source) -> None: ...
    @property
    def metadata(self): ...
    @property
    def schema(self): ...
    @property
    def nrows(self): ...
    @property
    def nstripes(self): ...
    @property
    def file_version(self): ...
    @property
    def software_version(self): ...
    @property
    def compression(self): ...
    @property
    def compression_size(self): ...
    @property
    def writer(self): ...
    @property
    def writer_version(self): ...
    @property
    def row_index_stride(self): ...
    @property
    def nstripe_statistics(self): ...
    @property
    def content_length(self): ...
    @property
    def stripe_statistics_length(self): ...
    @property
    def file_footer_length(self): ...
    @property
    def file_postscript_length(self): ...
    @property
    def file_length(self): ...
    def read_stripe(self, n, columns: Incomplete | None = ...): ...
    def read(self, columns: Incomplete | None = ...): ...

class ORCWriter:
    __doc__: Incomplete
    is_open: bool
    writer: Incomplete
    def __init__(self, where, *, file_version: str = ..., batch_size: int = ..., stripe_size=..., compression: str = ..., compression_block_size: int = ..., compression_strategy: str = ..., row_index_stride: int = ..., padding_tolerance: float = ..., dictionary_key_size_threshold: float = ..., bloom_filter_columns: Incomplete | None = ..., bloom_filter_fpp: float = ...) -> None: ...
    def __del__(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *args, **kwargs) -> None: ...
    def write(self, table) -> None: ...
    def close(self) -> None: ...

def read_table(source, columns: Incomplete | None = ..., filesystem: Incomplete | None = ...): ...
def write_table(table, where, *, file_version: str = ..., batch_size: int = ..., stripe_size=..., compression: str = ..., compression_block_size: int = ..., compression_strategy: str = ..., row_index_stride: int = ..., padding_tolerance: float = ..., dictionary_key_size_threshold: float = ..., bloom_filter_columns: Incomplete | None = ..., bloom_filter_fpp: float = ...) -> None: ...
