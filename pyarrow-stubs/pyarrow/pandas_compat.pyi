from _typeshed import Incomplete
from pyarrow.lib import builtin_pickle as builtin_pickle, frombytes as frombytes

def get_logical_type_map(): ...
def get_logical_type(arrow_type): ...
def get_logical_type_from_numpy(pandas_collection): ...
def get_extension_dtype_info(column): ...
def get_column_metadata(column, name, arrow_type, field_name): ...
def construct_metadata(columns_to_convert, df, column_names, index_levels, index_descriptors, preserve_index, types): ...
def dataframe_to_types(df, preserve_index, columns: Incomplete | None = ...): ...
def dataframe_to_arrays(df, schema, preserve_index, nthreads: int = ..., columns: Incomplete | None = ..., safe: bool = ...): ...
def get_datetimetz_type(values, dtype, type_): ...
def dataframe_to_serialized_dict(frame): ...
def serialized_dict_to_dataframe(data): ...
def make_datetimetz(tz): ...
def table_to_blockmanager(options, table, categories: Incomplete | None = ..., ignore_metadata: bool = ..., types_mapper: Incomplete | None = ...): ...
def make_tz_aware(series, tz): ...
