from _typeshed import Incomplete
from collections.abc import Generator
from pyarrow.util import implements as implements

class FileSystem:
    def cat(self, path): ...
    def ls(self, path) -> None: ...
    def delete(self, path, recursive: bool = ...) -> None: ...
    def disk_usage(self, path): ...
    def stat(self, path) -> None: ...
    def rm(self, path, recursive: bool = ...): ...
    def mv(self, path, new_path): ...
    def rename(self, path, new_path) -> None: ...
    def mkdir(self, path, create_parents: bool = ...) -> None: ...
    def exists(self, path) -> None: ...
    def isdir(self, path) -> None: ...
    def isfile(self, path) -> None: ...
    def read_parquet(self, path, columns: Incomplete | None = ..., metadata: Incomplete | None = ..., schema: Incomplete | None = ..., use_threads: bool = ..., use_pandas_metadata: bool = ...): ...
    def open(self, path, mode: str = ...) -> None: ...
    @property
    def pathsep(self): ...

class LocalFileSystem(FileSystem):
    def __init__(self) -> None: ...
    @classmethod
    def get_instance(cls): ...
    def ls(self, path): ...
    def mkdir(self, path, create_parents: bool = ...) -> None: ...
    def isdir(self, path): ...
    def isfile(self, path): ...
    def exists(self, path): ...
    def open(self, path, mode: str = ...): ...
    @property
    def pathsep(self): ...
    def walk(self, path): ...

class DaskFileSystem(FileSystem):
    fs: Incomplete
    def __init__(self, fs) -> None: ...
    def isdir(self, path) -> None: ...
    def isfile(self, path) -> None: ...
    def delete(self, path, recursive: bool = ...): ...
    def exists(self, path): ...
    def mkdir(self, path, create_parents: bool = ...): ...
    def open(self, path, mode: str = ...): ...
    def ls(self, path, detail: bool = ...): ...
    def walk(self, path): ...

class S3FSWrapper(DaskFileSystem):
    def isdir(self, path): ...
    def isfile(self, path): ...
    def walk(self, path, refresh: bool = ...) -> Generator[Incomplete, None, None]: ...

def resolve_filesystem_and_path(where, filesystem: Incomplete | None = ...): ...
