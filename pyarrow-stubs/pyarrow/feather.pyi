from _typeshed import Incomplete
from pyarrow._feather import FeatherError as FeatherError
from pyarrow.lib import Codec as Codec, Table as Table, concat_tables as concat_tables, schema as schema
from pyarrow.vendored.version import Version as Version

class FeatherDataset:
    paths: Incomplete
    validate_schema: Incomplete
    def __init__(self, path_or_paths, validate_schema: bool = ...) -> None: ...
    schema: Incomplete
    def read_table(self, columns: Incomplete | None = ...): ...
    def validate_schemas(self, piece, table) -> None: ...
    def read_pandas(self, columns: Incomplete | None = ..., use_threads: bool = ...): ...

def check_chunked_overflow(name, col) -> None: ...
def write_feather(df, dest, compression: Incomplete | None = ..., compression_level: Incomplete | None = ..., chunksize: Incomplete | None = ..., version: int = ...) -> None: ...
def read_feather(source, columns: Incomplete | None = ..., use_threads: bool = ..., memory_map: bool = ...): ...
def read_table(source, columns: Incomplete | None = ..., memory_map: bool = ..., use_threads: bool = ...): ...
